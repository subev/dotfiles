# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt
snippet defineComponent "Basic snippet for a component using composition api" b
<template>
  <div
    class="foo"
    :title="title"
  />
</template>

<script lang="ts">
import {
  defineComponent,
  computed
} from '@vue/composition-api'

/**
 * @Component Foo
 */
export default defineComponent({
  name: 'Foo',
  props: {
    foo: {
      type: String,
      required: true
    }
  },
  setup ({ foo }: { foo: string }) {
    const title = computed(() => {
      return {
        content: foo + 'bar'
      }
    })

    return {
      title
    }
  }
})
</script>

<style lang="scss" scoped>
.foo {
  width: 100%;

  &--selected {
    background-color: #f00;
  }
}
</style>
endsnippet
snippet deb "debugger with eslint ignore"
// eslint-disable-next-line no-debugger
debugger
endsnippet
snippet cons "console log with eslint ignore"
// eslint-disable-next-line no-console
console.log(${1})
endsnippet
