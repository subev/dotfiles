# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt
snippet setup "Basic snippet for a component using composition api" b
<template></template>

<script lang="ts">
export default {
  name: '`!p snip.rv = snip.basename`'
}
</script>

<script setup lang="ts"></script>

<style lang="scss" scoped></style>
endsnippet
snippet deb "debugger with eslint ignore"
// eslint-disable-next-line no-debugger
debugger
endsnippet
snippet cons "console log with eslint ignore"
// eslint-disable-next-line no-console
console.log(${1})
endsnippet

snippet setupp "Vue 3 syntax" b
<script setup lang="ts">
	${1}
</script>

<template>

</template>
endsnippet

snippet prop "define props" b
defineProps<{
	${1}
}>()
endsnippet

snippet emit "define emit" b
defineEmits<{
  (e: '${1}', ${2}: ${3}): void
}>()
endsnippet
