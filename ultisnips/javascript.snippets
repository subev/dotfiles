# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt
snippet rangejs "range sequance generator"
const range = (start, stop, step = 1) =>
  Array.from(
    { length: stop === undefined ? start : (stop - start) / step + 1 },
    (_, i) => (stop === undefined ? 0 : start) + i * step
  );
endsnippet

snippet swapjs "swaps two elements in array and returns it" b
const swap = (a, b, arr) => {
  const temp = arr[a];
  arr[a] = arr[b];
  arr[b] = temp;
  return arr;
};
endsnippet

snippet timesjs "call the fn X times"
const times = (f, t) => {
  let result;
  while (t--) {
    result = f();
  }
  return result;
};
endsnippet
